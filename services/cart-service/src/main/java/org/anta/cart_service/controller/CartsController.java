package org.anta.cart_service.controller;

import lombok.RequiredArgsConstructor;
import org.anta.cart_service.dto.request.CartItemsRequest;
import org.anta.cart_service.dto.response.CartsResponse;
import org.anta.cart_service.entity.Carts;
import org.anta.cart_service.mapper.CartsMapper;
import org.anta.cart_service.service.CartsService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
@RequiredArgsConstructor
@RequestMapping("/api/cart")
public class CartsController {

    private final CartsService cartsService;
    private final CartsMapper cartsMapper;

    /**
     * üõí [POST] Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
     * Body: AddCartItemRequest
     */
    @PostMapping("/add")
    public ResponseEntity<CartsResponse> addItemToCart(@RequestBody CartItemsRequest request) {
        Carts cart = cartsService.AddItemsToCarts(request);
        return ResponseEntity.ok(cartsMapper.toResponse(cart));
    }

    /**
     * üîç [GET] L·∫•y gi·ªè h√†ng hi·ªán t·∫°i theo userId ho·∫∑c sessionId
     * V√≠ d·ª•: /api/cart/current?userId=1
     * Ho·∫∑c:  /api/cart/current?sessionId=abc123
     */
    @GetMapping("/current")
    public ResponseEntity<CartsResponse> getCurrentCart(
            @RequestParam(required = false) Long userId,
            @RequestParam(required = false) String sessionId
    ) {
        Optional<Carts> optionalCart = cartsService.getCurrentCart(userId, sessionId);

        if (optionalCart.isEmpty()) {
            return ResponseEntity.noContent().build(); // 204 n·∫øu ch∆∞a c√≥ cart
        }

        CartsResponse response = cartsMapper.toResponse(optionalCart.get());
        return ResponseEntity.ok(response);
    }

    /**
     * ‚ùå [DELETE] Xo√° 1 s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
     */
    @DeleteMapping("/item/{itemId}")
    public ResponseEntity<Void> removeItemFromCart(@PathVariable Long itemId) {
        cartsService.DeleteItemsOutCart(itemId);
        return ResponseEntity.noContent().build();
    }

    /**
     * üßπ [DELETE] Xo√° to√†n b·ªô gi·ªè h√†ng
     */
    @DeleteMapping("/{cartId}/clear")
    public ResponseEntity<Void> clearCart(@PathVariable Long cartId) {
        cartsService.DeleteFullItemsOutCart(cartId);
        return ResponseEntity.noContent().build();
    }
}

